"""empty message

Revision ID: cc130c42e0e1
Revises: 959cd507155b
Create Date: 2020-03-20 00:51:07.061794

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "cc130c42e0e1"
down_revision = "959cd507155b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "set_bonus_translation",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("set_translation_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("locale", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["set_translation_id"],
            ["set_bonus.uuid"],
            name=op.f("fk_set_bonus_translation_set_translation_id_set_bonus"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_set_bonus_translation")),
    )
    op.create_table(
        "item_stat_translation",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("item_stat_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("locale", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_stat_id"],
            ["item_stat.uuid"],
            name=op.f("fk_item_stat_translation_item_stat_id_item_stat"),
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_item_stat_translation")),
    )
    op.create_index(
        op.f("ix_item_stat_translation_item_stat_id"),
        "item_stat_translation",
        ["item_stat_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_item_stat_translation_locale"),
        "item_stat_translation",
        ["locale"],
        unique=False,
    )
    op.create_table(
        "set_custom_bonus",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column(
            "set_bonus_translation_id", postgresql.UUID(as_uuid=True), nullable=False
        ),
        sa.Column("custom_stat", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["set_bonus_translation_id"],
            ["set_bonus_translation.uuid"],
            name=op.f(
                "fk_set_custom_bonus_set_bonus_translation_id_set_bonus_translation"
            ),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_set_custom_bonus")),
    )
    op.create_table(
        "item_custom_stat",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column(
            "item_stat_translation_id", postgresql.UUID(as_uuid=True), nullable=False
        ),
        sa.Column("custom_stat", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["item_stat_translation_id"],
            ["item_stat_translation.uuid"],
            name=op.f(
                "fk_item_custom_stat_item_stat_translation_id_item_stat_translation"
            ),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_item_custom_stat")),
    )
    op.add_column("item_slot", sa.Column("order", sa.Integer(), nullable=False))
    op.add_column("item_stat", sa.Column("order", sa.Integer(), nullable=False))
    op.drop_constraint("fk_item_stats_item_id_item", "item_stat", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_item_stat_item_id_item"),
        "item_stat",
        "item",
        ["item_id"],
        ["uuid"],
        ondelete="CASCADE",
    )
    op.drop_column("item_stat", "alt_stat")
    op.drop_column("set_bonus", "alt_stat")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "set_bonus",
        sa.Column("alt_stat", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "item_stat",
        sa.Column("alt_stat", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(
        op.f("fk_item_stat_item_id_item"), "item_stat", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_item_stats_item_id_item", "item_stat", "item", ["item_id"], ["uuid"]
    )
    op.drop_column("item_stat", "order")
    op.drop_column("item_slot", "order")
    op.drop_table("item_custom_stat")
    op.drop_table("set_custom_bonus")
    op.drop_index(
        op.f("ix_item_stat_translation_locale"), table_name="item_stat_translation"
    )
    op.drop_index(
        op.f("ix_item_stat_translation_item_stat_id"),
        table_name="item_stat_translation",
    )
    op.drop_table("item_stat_translation")
    op.drop_table("set_bonus_translation")
    # ### end Alembic commands ###
