"""empty message

Revision ID: 101593cfd491
Revises: 761778ee8ca2
Create Date: 2020-05-03 21:14:13.559074

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "101593cfd491"
down_revision = "761778ee8ca2"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_setting",
        sa.Column(
            "uuid",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("locale", sa.String(), nullable=True),
        sa.Column("classic", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_account.uuid"],
            name=op.f("fk_user_setting_user_id_user_account"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_user_setting")),
    )

    conn = op.get_bind()
    res = conn.execute("SELECT u.uuid, u.locale FROM user_account u;")
    users = res.fetchall()

    for user in users:
        conn.execute(
            "INSERT INTO user_setting (user_id, locale, classic) VALUES ('{}', '{}', {})".format(
                user[0], user[1], "FALSE"
            )
        )

    op.create_index(
        op.f("ix_user_setting_user_id"), "user_setting", ["user_id"], unique=False
    )
    op.drop_column("user_account", "locale")
    op.alter_column("user_setting", "locale", nullable=False)
    op.alter_column("user_setting", "classic", nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user_account",
        sa.Column("locale", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    conn = op.get_bind()
    res = conn.execute(
        "SELECT u.uuid, us.locale FROM user_account u JOIN user_setting us on us.user_id=u.uuid;"
    )
    users = res.fetchall()

    for user in users:
        conn.execute(
            "UPDATE user_account ua SET locale='{}' WHERE ua.uuid = '{}'".format(
                user[1], user[0]
            )
        )
    op.alter_column("user_account", "locale", nullable=False)
    op.drop_index(op.f("ix_user_setting_user_id"), table_name="user_setting")
    op.drop_table("user_setting")
    # ### end Alembic commands ###
